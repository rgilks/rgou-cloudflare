import { defineConfig } from 'vitest/config';
import { resolve } from 'path';

export default defineConfig({
  test: {
    environment: 'jsdom',
    setupFiles: ['./src/lib/__tests__/setup.ts'],
    globals: true,
    css: false, // Disable CSS processing for tests
    exclude: [
      'node_modules',
      'node_modules/**',
      '**/node_modules/**',
      '**/dist/**',
      '**/.next/**',
      '**/out/**',
      '**/e2e/**',
      '**/playwright/**',
      '**/.git/**',
      '**/coverage/**',
      '**/.turbo/**',
      '**/.vscode/**',
      '**/wasm/**',
      '**/pkg/**',
      '**/target/**',
      '**/build/**',
      '**/scripts/**',
      '**/public/**',
      '**/migrations/**',
      '**/docs/**',
      '**/test-db/**',
      '**/test/**',
      '**/__snapshots__/**',
      '**/*.d.ts',
      '**/*.md',
      '**/*.json',
      '**/*.png',
      '**/*.jpg',
      '**/*.jpeg',
      '**/*.gif',
      '**/*.svg',
      '**/*.ico',
      '**/*.lock',
      '**/*.log',
      '**/*.bak',
      '**/*.tmp',
      '**/*.swp',
      '**/*.zip',
      '**/*.tar',
      '**/*.gz',
      '**/*.rar',
      '**/*.7z',
      '**/*.pdf',
      '**/*.csv',
      '**/*.tsbuildinfo',
    ],
    coverage: {
      provider: 'v8',
      reporter: ['text', 'json', 'html'],
      exclude: [
        'src/lib/sound-effects.ts',
        'src/lib/types.ts',
        'src/lib/ai.worker.ts',
        'node_modules/**',
        '**/node_modules/**',
        'src/lib/__tests__/**',
        '**/*.test.ts',
        '**/*.test.tsx',
        '**/*.spec.ts',
        '**/*.spec.tsx',
        '**/*.d.ts',
        '**/*.config.*',
        '**/*.config.js',
        '**/*.config.ts',
        '**/*.config.mjs',
        'worker/**',
        'public/**',
        'migrations/**',
        'scripts/**',
        'docs/**',
        'e2e/**',
        'playwright/**',
        '**/coverage/**',
        '**/.next/**',
        '**/dist/**',
        '**/build/**',
        '**/target/**',
        '**/pkg/**',
        '**/wasm/**',
        '**/*.json',
        '**/*.md',
        '**/*.png',
        '**/*.jpg',
        '**/*.jpeg',
        '**/*.gif',
        '**/*.svg',
        '**/*.ico',
        '**/*.lock',
        '**/*.log',
        '**/*.bak',
        '**/*.tmp',
        '**/*.swp',
        '**/*.zip',
        '**/*.tar',
        '**/*.gz',
        '**/*.rar',
        '**/*.7z',
        '**/*.pdf',
        '**/*.csv',
        '**/*.tsbuildinfo',
        '**/setup.ts',
        '**/vitest.config.ts',
        '**/postcss.config.mjs',
        '**/tailwind.config.js',
        '**/next.config.mjs',
        '**/wrangler.toml',
        '**/drizzle.config.ts',
        '**/drizzle.config.local.ts',
        '**/open-next.config.ts',
        '**/eslint.config.mjs',
        '**/tsconfig.json',
        '**/package.json',
        '**/package-lock.json',
        '**/Cargo.toml',
        '**/Cargo.lock',
        '**/wrangler.toml',
        '**/wrangler.toml.local',
        '**/wrangler.toml.example',
        '**/wrangler.toml.template',
        '**/wrangler.toml.backup',
        '**/wrangler.toml.old',
        '**/wrangler.toml.bak',
        '**/wrangler.toml.tmp',
        '**/wrangler.toml.swp',
        '**/wrangler.toml.zip',
        '**/wrangler.toml.tar',
        '**/wrangler.toml.gz',
        '**/wrangler.toml.rar',
        '**/wrangler.toml.7z',
        '**/wrangler.toml.pdf',
        '**/wrangler.toml.csv',
        '**/wrangler.toml.tsbuildinfo',
        'src/app/**',
        'src/components/**',
        // AI worker files below are excluded because they depend on browser/worker APIs and cannot be reliably tested in Node
        'src/lib/wasm-ai-service.ts',
        'src/lib/ml-ai-service.ts',
        'src/lib/__tests__/wasm-ai-service.test.ts',
        'src/lib/__tests__/ml-ai-service.test.ts',
        // Utility files that depend on Node.js APIs and file system operations
        'src/lib/utils/getFileHash.ts',
        'src/lib/utils/getGitCommitHash.ts',
        // Worker files that cannot be tested in Node environment
        'src/lib/ai.worker.ts',
        'src/lib/ml-ai.worker.ts',
      ],
      include: ['src/**/*.ts', 'src/**/*.tsx', 'src/**/*.js', 'src/**/*.jsx'],
    },
  },
  resolve: {
    alias: {
      '@': resolve(__dirname, './src'),
      '/wasm': resolve(__dirname, './public/wasm'),
    },
  },
  define: {
    'process.env.NODE_ENV': '"test"',
  },
});
